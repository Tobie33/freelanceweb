<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>
window.pageData = {
  categories: [],
  users: [],
  queries: {},
}

const handleCategoryChange = (e) => {
  const newOption = generateRoleOptions()
  $('#role-empty-option').siblings().remove()
  $('#role-empty-option').after(newOption)
}

const generateRoleOptions = () => {
  const { categories, queries } = window.pageData
  const selectedCategoryOption = queries?.category || $('#category').find(":selected").val()
  const category = categories.find((cat) => cat.categoryName === selectedCategoryOption)

  if (category) {
    return category.roles.map((role, index) => {
      return `
        <option value="${role.roleName}"  ${queries?.role === role.roleName ? 'selected' : ''}>${role.roleName}</option>
      `
    }).join("")
  } else {
    return ''
  }
}

const generateCategoriesOption = () => {
  const { categories, queries } = window.pageData
  return categories.map((category, index) => {
    return `
      <option value="${category.categoryName}" ${queries?.category === category.categoryName ? 'selected' : ''}>${category.categoryName}</option>
    `
  }).join("")
}

const generateFilter = () => {
  const { queries } = window.pageData
  console.log(queries)
  const categoriesList = generateCategoriesOption()
  const rolesList = generateRoleOptions()

  return `
    <form id="filter" class="row row-cols-lg-auto g-3 justify-content-center align-items-center mb-3">
      <div class="col-12">
        <div class="input-group">
          <div class="input-group-text">Category</div>
          <select id="category" class="form-select" name="category">
            <option value="">Select a Category</option>
            ${categoriesList}
          </select>
        </div>
      </div>
      <div class="col-12">
        <div class="input-group">
          <div class="input-group-text">Role</div>
          <select class="form-select" id="role" name="role">
            <option id="role-empty-option" value="">Select a Role</option>
            ${rolesList}
          </select>
        </div>
      </div>
      <div class="col-12">
        <div class="input-group">
          <div class="input-group-text">Filter By</div>
          <select class="form-select" name="filterBy">
            <option value="">Select a Filter</option>
            <option ${queries?.filterBy === 'age' ? 'selected' : ''} value="age">Age</option>
            <option ${queries?.filterBy === 'price' ? 'selected' : ''} value="price">Price</option>
            <option ${queries?.filterBy === 'experience' ? 'selected' : ''} value="experience">Experience</option>
          </select>
        </div>
      </div>
      <div class="col-12">
        <div class="input-group">
          <div class="input-group-text">Range</div>
            <input type="number" class="form-control" name ="smallNum" id="smallest-num-for-range" placeholder="Smallest Number" value="${queries?.smallNum || ''}">
          <div class="input-group-text">-</div>
            <input type="number" class="form-control" name="largeNum" id="largest-num-for-range" placeholder="Largest Number" value="${queries?.largeNum || ''}">
        </div>
      </div>
      <div class="col-12">
        <button class="btn btn-primary" type="submit" >Submit</button>
      </div>
      <div class="col-12">
        <button id="reset-form" class="btn btn-danger" type="reset">Reset</button>
      </div>
    </form>
  `
}

const generateUserCard = (users) => {
  let test = ""
  users.map((user,index)=>{
    const {id, name, age, experience, price, description, roles = []} = user
    const {roleName} = roles[0]
    test += `
      <div class="card" id="user-card">
        <h5 class="card-header">${name}</h5>
        <div class="card-body">
          <h5 class="card-title">${roleName}</h5>
          <p class="card-text">
          <ul>
            <li>
              Age : ${age}
            </li>
            <li>
              Experience: ${experience} Years
            </li>
            <li>
              Price: $ ${price}
            </li>
            <p>
              Short Intro:
              ${description}
            </p>
          </ul>
          </p>
          <a id="${index}" href="#" class="btn btn-primary contact-buttons" value="${id}">Contact!</a>
        </div>
      </div>
      </br>
    `
  })
  return test
}

const handleUserContact = (e) => {

  const buttonInfo = e.target
  const id = $(buttonInfo).attr("value")

  axios({
    method: 'GET',
    url: `/api/users/${id}`
  }).then((res)=> {
    window.location.href= `/users/${id}`
  })

}

const handleFilterSubmit = (e) => {
  e.preventDefault()
  const queries = parseFormData(new FormData(e.currentTarget))
  window.pageData.queries = queries
  generatePage({ isLoading: true })

  axios({
    method: 'GET',
    url: '/api/users',
    params: queries
  }).then((res) => {
    window.pageData.users = res.data
    generatePage()
  })
}

const handleFilterReset = (e) => {
  window.location = window.location
}

const generateUserCards = () => {
  const { users } = window.pageData

  if(users.length === 0){
    return `
      <h1>No users available for hire!</h1>
    `
  }

  return `
    <div>
      ${generateUserCard(users)}
    </div>
  `
}

const generatePage = () => {
  const $page = $('#pages-users-index')
  const $filter = generateFilter()
  const $users = generateUserCards()

  $page.html('').append($filter).append($users)
}

const getUsers = () => {
  axios({
    method: 'GET',
    url:'/api/users'
  }).then((res) => {
    window.pageData.users = res.data
    getCategories()
  })
}

const getCategories = () => {
  axios({
    method: 'GET',
    url:'/api/categories'
  }).then((res) => {
    window.pageData.categories = res.data
    generatePage()
  })
}

$(document).ready(() => {
  getUsers()

  $('#pages-users-index').on('input', '#category', handleCategoryChange)
  $('#pages-users-index').on('submit', '#filter', handleFilterSubmit)
  $('#pages-users-index').on('reset', '#filter', handleFilterReset)
  $('#pages-users-index').on('click','.contact-buttons', handleUserContact)

})
</script>

<%- contentFor('body') %>
<div id="pages-users-index" class="container"></div>
